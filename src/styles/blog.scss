@use 'variables';
@use 'animation';

html {
    scroll-behavior: smooth;
}

body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    background-color: variables.$neutralColor;
    font-size: 18px;
    font-family: 'Comfortaa', cursive;

    @media screen and (max-width: 767px) {
        font-size: 16px;
    }
}

h1 {
    margin: 0;
}

h2 {
    font-size: 60px;

    @media screen and (max-width: 767px) {
        font-size: 32px;
    }
}

a {
    text-decoration: none;
    color: variables.$secondaryColor;
}

p {
    line-height: 1.4;
}

.wrapper {
    max-width: 1920px;
    width: 100%;
    margin: 0 auto;
}

.blog-header {
    width: 100%;
    min-height: 80px;
    height: 100%;
    padding: 10px 0;
    background-color: variables.$mainColor;
}

.blog-logo {
    width: 140px;
    display: block;
    margin: 0 auto;
}

.blog-container {
    max-width: 1024px;
    width: 94%;
    margin: 0 auto;
    padding: 60px 10px;
}

.header-blog {
    color: #fff;
    display: block;
    text-align: center;
    font-size: 50px;
    margin-top: 20px;
    text-transform: uppercase;
}

#loader {
    width: 120px;
    display: block;
    margin: 0 auto;
}

#loader-container {
    width: fit-content;
    margin: 0 auto;
}

.disapear {
    display: none;
}

.post-container {

    @media screen and (max-width: 767px) {
        & img {
            max-width: 100%;
            height: fit-content;
            overflow: unset;
        }
    
        & figure {
            display: block;
            width: fit-content;
            margin-block-start: 0;
            margin-block-end: 0;
            margin-inline-start: 0;
            margin-inline-end: 0;
            unicode-bidi: isolate;
        }
    }
}

.loader {
    width: 50px;
    padding: 8px;
    aspect-ratio: 1;
    border-radius: 50%;
    background: variables.$mainColor;
    --_m:
        conic-gradient(#0000 10%, #000),
        linear-gradient(#000 0 0) content-box;
    -webkit-mask: var(--_m);
    mask: var(--_m);
    -webkit-mask-composite: source-out;
    mask-composite: subtract;
    animation: l3 1s infinite linear;
}

@keyframes l3 {
    to {
        transform: rotate(1turn)
    }
}